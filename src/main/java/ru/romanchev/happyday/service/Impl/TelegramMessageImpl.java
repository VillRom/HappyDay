package ru.romanchev.happyday.service.Impl;

import lombok.Data;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import ru.romanchev.happyday.dto.MessageDto;
import ru.romanchev.happyday.model.CallBackDates;
import ru.romanchev.happyday.service.JokeService;
import ru.romanchev.happyday.service.MessageService;
import ru.romanchev.happyday.service.PhraseService;
import ru.romanchev.happyday.service.TelegramMessage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Service
@RequiredArgsConstructor
@Data
@Slf4j
public class TelegramMessageImpl implements TelegramMessage {

    private Message message;
    private final PhraseService phraseService;

    private final MessageService messageService;

    private final JokeService jokeService;

    @Override
    public SendMessage getHappy() {
        log.info("–ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ /happy –æ—Ç {}", message.getChat().getFirstName());
        String response = "–î–∞—Ä—é —Ç–µ–±–µ —ç—Ç—É —Ñ—Ä–∞–∑—É:\n" + "\uD83D\uDC4C" + getHappyPhrases() +
                "üëå \n–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –Ω–∞–∂–∏–º–∞–π –µ—â—ë - /happy\n–ò–ª–∏ –∫–ª–∏–∫–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \uD83D\uDC47";
        saveMessage(message.getText(), response, message.getChatId(), message.getDate());
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(String.valueOf(message.getChatId()));
        sendMessage.setText(response);
        sendMessage.setReplyMarkup(oneButtonOnKeyboard(String.valueOf(CallBackDates.GET_HAPPY)));
        return sendMessage;
    }

    @Override
    public SendMessage getJoke() {
        log.info("–ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ /joke –æ—Ç {}", message.getChat().getFirstName());
        String response;
        String textJoke = getRandomJoke();
        if (textJoke != null)
            response = "–ü–æ–ª—É—á–∞–π –∞–Ω–µ–∫–¥–æ—Ç:\n" + textJoke + "\n --------\n–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –Ω–∞–∂–∏–º–∞–π –µ—â—ë" +
                    " - /joke\n–ò–ª–∏ –∫–ª–∏–∫–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \uD83D\uDC47";
        else response = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞, –∏–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –ø–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é.\n" +
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.\n–ú–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π - /happy";
        saveMessage(message.getText(), response, message.getChatId(), message.getDate());
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(String.valueOf(message.getChatId()));
        sendMessage.setText(response);
        if (response.startsWith("–ü–æ–ª—É—á–∞–π")) sendMessage.setReplyMarkup(oneButtonOnKeyboard(String
                .valueOf(CallBackDates.GET_JOKE)));
        return sendMessage;
    }

    private String getRandomJoke() {
        return jokeService.getRandomJoke().getTextJoke();
    }

    private String getHappyPhrases() {
        return phraseService.getRandomPhrase().getTextPhrase();
    }

    private void saveMessage(String textIn, String textTo, Long userId, Integer date) {
        MessageDto dto = new MessageDto();
        dto.setDate(new Date(date.longValue() * 1000));
        dto.setUserId(userId);
        dto.setTextIn(textIn);
        dto.setTextTo(textTo);
        messageService.addMessageFromUser(dto);
    }

    private InlineKeyboardMarkup oneButtonOnKeyboard(String callbackData) {
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        List<InlineKeyboardButton> rowInLine = new ArrayList<>();
        var button = new InlineKeyboardButton();
        button.setText("–ï—â—ë \uD83E\uDD17");
        button.setCallbackData(callbackData);

        rowInLine.add(button);
        rowsInline.add(rowInLine);
        keyboardMarkup.setKeyboard(rowsInline);
        return keyboardMarkup;
    }
}
